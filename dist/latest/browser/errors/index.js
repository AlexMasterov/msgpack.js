class MsgPackError extends Error{constructor(e){super(e),Error.captureStackTrace(this,new.target),this.name=new.target.name,this.message=e}}class DecodingFailed extends MsgPackError{static fromOffset(e){return new this(`Cannot decode data with byte-header in position ${e}`)}}class EncodingFailed extends MsgPackError{static withValue(e){return new this(`Could not encode: ${typeof e}`)}}class InsufficientData extends DecodingFailed{static unexpectedLength(e,t){return new this(`Not enough data to decode: expected length ${e}, got ${t}`)}}export{DecodingFailed,EncodingFailed,InsufficientData,MsgPackError};
